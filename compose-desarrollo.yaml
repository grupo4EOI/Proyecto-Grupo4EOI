name: ${COMPOSE_NAME}


# Definimos los servicios que se ejecutarán en los contenedores Docker.
services:
  java:
    image: ${PROJECT_NAME}:${VERSION:-snapshot}
    ports:
      - "${PUERTO_DESARROLLO:-8080}:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/desarrollodb
      SPRING_DATASOURCE_USERNAME: desarrollouser
      SPRING_DATASOURCE_PASSWORD: desarrollopassword
      SPRING_PROFILES_ACTIVE: desarrollo
      APP_UPLOAD_DIR: /tmp/uploads
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 5
    restart: always
    volumes:
      - ./uploads:/tmp/uploads

    command: >
      sh -c "
      # Crear directorio de uploads con permisos adecuados
      mkdir -p $${APP_UPLOAD_DIR} &&
      chmod -R 777 $${APP_UPLOAD_DIR} &&
      
      # Iniciar aplicación
      java -jar /app.jar
      "

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: 'desarrollodb'
      POSTGRES_USER: 'desarrollouser'
      POSTGRES_PASSWORD: 'desarrollopassword'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U desarrollouser -d desarrollodb"  ]
      timeout: 20s
      retries: 10
    restart: always
    ports:
      - "${PUERTO_DB_DESARROLLO}:5432"